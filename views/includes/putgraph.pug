script.
  function putGraph(selector, input) {
  var Gcolor = {
  loss: "#cc0000",
  gain: "#009900",
  empty: "#b3b3b3"
  }
  var data = [{label: 'loss', percent: input.loss}, {label: 'empty', percent: input.empty}, {label: 'gain',percent: input.gain}];
  var width = 200,
  height = 200,
  radius = Math.min(width, height) / 2;
  var color = d3.scaleOrdinal()
  .range([ Gcolor.loss, Gcolor.empty, Gcolor.gain]);
  var arc = d3.arc()
  .outerRadius(radius)
  .innerRadius(radius - 20);
  var pie = d3.pie()
  .sort(null)
  .value(function (d) {
  return d.percent;
  });
  var svg = d3.select(selector)
  .append("svg");
  svg.attr("width", width).attr("height", height);
  var main = svg.append("g");
  main
  .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
  main.append("text")
  .text(
  function (d) {
  return String(100 - Number(input.empty)) + "%"
  })
  .attr('text-anchor', 'middle')
  .attr('font-family', "Roboto")
  .attr('font-size', '400%')
  .attr('alignment-baseline', 'middle')
  .attr('fill', (() => {return (Number(input.loss) > Number(input.gain))? Gcolor.loss: Gcolor.gain;}));
  var g = main.selectAll(".arc")
  .data(pie(data))
  .enter().append("g")
  .attr("class", "arc");
  g.append("path")
  .attr("d", arc)
  .style("fill", function (d) {
  return color(d.data.label);
  });
  }